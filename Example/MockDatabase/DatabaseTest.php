<?php

require_once 'Database.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-10 at 22:44:27.
 */
class DatabaseTest extends PHPUnit_Framework_TestCase
{
    private $db = null;

    public function setUp() {
        $this->db = new Database();
    }

    public function tearDown() {
        unset($this->db);
    }

    /**
     * Test that the "really long query" always returns values
     */
    public function testReallyLongReturn() {
        $mock = $this->getMock('Database');
        $result = array(
            array(1, 'foo', 'bar test')
        );

        $mock->expects($this->any())
            ->method('reallyLongTime')
            ->will($this->returnValue($result));

        $return = $mock->reallyLongTime();

        $this->assertGreaterThan(0, count($return));
    }


    public function testReallyLongRunBuilder() {
        $stub = $this->getMockBuilder('Database')
            ->setMethods(array(
                'reallyLongTime'
            ))
            ->disableAutoload()
            ->disableOriginalConstructor()
            ->getMock();

        $result = array(array(1, 'foo', 'bar test'));

        $stub->expects($this->any())
            ->method('reallyLongTime')
            ->will($this->returnValue($result));

        $return = $stub->reallyLongTime();
        $this->assertGreaterThan(0, count($return));
    }

    /**
     * Проверка типа входных данных
     */
    public function ttestReallyLongRunBuilderConstraint() {
        $stub = $this->getMock('Database', array('reallyLongTime'));

        $stub->expects($this->any())
            ->method('reallyLongTime')
            ->with($this->isType('array'));

        $arr = array('test');

        $this->assertTrue($stub->reallyLongRun($arr));
    }
}
